<?php

declare(strict_types=1);

namespace Yiisoft\Db\Oracle;

use Yiisoft\Db\Connection\ServerInfoInterface;
use Yiisoft\Db\Constant\ColumnType;
use Yiisoft\Db\Constant\PseudoType;
use Yiisoft\Db\Oracle\Column\ColumnDefinitionBuilder;
use Yiisoft\Db\QueryBuilder\AbstractQueryBuilder;
use Yiisoft\Db\Schema\QuoterInterface;
use Yiisoft\Db\Schema\SchemaInterface;

use function bin2hex;

/**
 * Implements the Oracle Server specific query builder.
 */
final class QueryBuilder extends AbstractQueryBuilder
{
    /**
     * @psalm-var string[] $typeMap Mapping from abstract column types (keys) to physical column types (values).
     */
    protected array $typeMap = [
        PseudoType::PK => 'NUMBER(10) GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY',
        PseudoType::UPK => 'NUMBER(10) GENERATED BY DEFAULT AS IDENTITY UNSIGNED NOT NULL PRIMARY KEY',
        PseudoType::BIGPK => 'NUMBER(20) GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY',
        PseudoType::UBIGPK => 'NUMBER(20) GENERATED BY DEFAULT AS IDENTITY UNSIGNED NOT NULL PRIMARY KEY',
        ColumnType::CHAR => 'CHAR(1)',
        ColumnType::STRING => 'VARCHAR2(255)',
        ColumnType::TEXT => 'CLOB',
        ColumnType::TINYINT => 'NUMBER(3)',
        ColumnType::SMALLINT => 'NUMBER(5)',
        ColumnType::INTEGER => 'NUMBER(10)',
        ColumnType::BIGINT => 'NUMBER(20)',
        ColumnType::FLOAT => 'BINARY_FLOAT',
        ColumnType::DOUBLE => 'BINARY_DOUBLE',
        ColumnType::DECIMAL => 'NUMBER(10,0)',
        ColumnType::DATETIME => 'TIMESTAMP(0)',
        ColumnType::TIMESTAMP => 'TIMESTAMP(0)',
        ColumnType::TIME => 'INTERVAL DAY(0) TO SECOND(0)',
        ColumnType::DATE => 'DATE',
        ColumnType::BINARY => 'BLOB',
        ColumnType::BOOLEAN => 'NUMBER(1)',
        ColumnType::MONEY => 'NUMBER(19,4)',
        ColumnType::UUID => 'RAW(16)',
        PseudoType::UUID_PK => 'RAW(16) DEFAULT SYS_GUID() PRIMARY KEY',
    ];

    public function __construct(QuoterInterface $quoter, SchemaInterface $schema, ServerInfoInterface $serverInfo)
    {
        parent::__construct(
            $quoter,
            $schema,
            $serverInfo,
            new DDLQueryBuilder($this, $quoter, $schema),
            new DMLQueryBuilder($this, $quoter, $schema),
            new DQLQueryBuilder($this, $quoter),
            new ColumnDefinitionBuilder($this),
        );
    }

    protected function prepareBinary(string $binary): string
    {
        return "HEXTORAW('" . bin2hex($binary) . "')";
    }
}
